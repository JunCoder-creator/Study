# git init - ініціалізація проекту;
# git add - добавити вміст директорії для подальшого коміта;
  
  //Example
  ! Добавити всю робочу область
  git add :/

  ! добавити область по шляху
  git add :/path/to/files/

  ! добавити область в даній директоріїї
  git add .

#git commit - берем всі данні добавлені з допомогою git add і зберігаєм їх у внутрішній базі данних;
#git push - добавити на github;
#git clone - скачати репозиторій;
#git status - покажить якій файли були змінені , були добавлені но не закомічені;
#git pull - загрузить всі зміни із репозиторія;

//Alias
s = status --short
st = status
l = log --oneline --graph --decorate --all
g = log --graph --abbrev-commit --decorate --all --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(dim white) - %an%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n %C(white)%s%C(reset)'
br = branch
co = checkout

#git checkout - відмінить зміни , верне код із останнього коміта;
#git reset - відмінить зміни, які були внесені після команди git add;
#git reset --hard HEAD^1 - ми повернемо код на 1 комінт назад;
#git reset --soft HEAD^1 - ми повернемо код на 1 комінт назад, при цьому код залишиться в файлі;

#git branch - покаже всі Pull requests;
#git branck -v - покажить останні коміти в вибраній вітці;
#git branch NAME - СТВОРИТЬ  нову вітку з назвою NAME;
#git checkout NAME - перейдем у вітку NAME;
#git branch -m NAME - перейменуємо вітку на NAME;

#git merge Name - обєднає 2 вітки , вибрану і Name;

